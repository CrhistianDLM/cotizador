{"version":3,"sources":["components/Header.js","helpers.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Contenedorheader","styled","header","TextoHeader","h1","Header","titulo","propType","PropType","string","isRequired","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","Array","keys","map","i","type","checked","func","Contenedorresumen","Resumen","object","Mensaje","p","TextoCotizacion","ResultadoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","number","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAWMA,EAAmBC,IAAOC,OAAV,2HAOhBC,EAAcF,IAAOG,GAAV,kIAMjB,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,OACb,OACI,cAACN,EAAD,UACI,cAACG,EAAD,UAAcG,MAI1BD,EAAOE,SAAW,CACdD,OAAQE,IAASC,OAAOC,YAEbL,I,YAAAA,I,wBCDR,SAASM,EAAgBC,GAC5B,OAAOA,EAAMC,OAAO,GAAGC,cAAgBF,EAAMG,MAAM,GC9BvD,IAAMC,EAAQf,IAAOgB,IAAV,oGAKLC,EAAQjB,IAAOkB,MAAV,kDAGLC,EAASnB,IAAOoB,OAAV,sJAONC,EAAarB,IAAOsB,MAAV,iDAGVC,EAAQvB,IAAOwB,OAAV,2WAgBLC,EAAQzB,IAAOgB,IAAV,qKAQX,SAASU,EAAT,GAAwD,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,gBAAkB,EAErBC,mBAAS,CACnCC,MAAM,GACNC,KAAK,GACLC,KAAK,KAL0C,mBAE5CC,EAF4C,KAErCC,EAFqC,OAQrBL,oBAAS,GARY,mBAQ5CM,EAR4C,KAQrCC,EARqC,KAU5CN,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KAGdK,EAAqB,SAAAC,GACvBJ,EAAa,2BACND,GADK,kBAEPK,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UA4CnC,OACI,uBACIC,SAzCc,SAAAJ,GAElB,GADAA,EAAEK,iBACmB,KAAjBb,EAAMc,QAAiC,KAAhBb,EAAKa,QAAiC,KAAhBZ,EAAKY,OAAtD,CAIAR,GAAa,GAIb,IAAIS,EAAY,IAEVC,ED9EP,SAA+Bf,GAClC,OAAO,IAAIgB,MAAOC,cAAgBjB,EC6EXkB,CAAsBlB,GAGzCc,GAA4B,EAAbC,EAAkBD,EAAa,IAK9CA,EDjFD,SAAuBf,GAC1B,IAAIoB,EACJ,OAAQpB,GACJ,IAAK,UACDoB,EAAa,IACb,MACJ,IAAK,YACDA,EAAa,KAEb,MACJ,IAAK,WACDA,EAAa,KAOrB,OAAOA,EC+DSC,CAAcrB,GAASe,EAInC,IAAMO,ED/DP,SAAqBpB,GACxB,MAAiB,WAATA,EAAqB,IAAO,IC8DTqB,CAAYrB,GACnCa,EAAYS,WAAWF,EAAiBP,GAAWU,QAAQ,GAC3D3B,GAAgB,GAEhB4B,YAAW,WAEP5B,GAAgB,GAGhBD,EAAe,CACX8B,WAAYC,OAAOb,GACnBZ,YAEL,UAlCCG,GAAa,IAqCjB,UAGKD,EAAQ,cAACV,EAAD,gDAAmD,KAC5D,eAACV,EAAD,WACI,cAACE,EAAD,oBACA,eAACE,EAAD,CAAQqB,KAAK,QAAQC,MAAOX,EAAO6B,SAAUtB,EAA7C,UACI,wBAAQI,MAAM,GAAd,8BACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,4BAGR,eAAC1B,EAAD,WACI,cAACE,EAAD,qBACA,eAACE,EAAD,CAAQqB,KAAK,OAAOC,MAAOV,EAAM4B,SAAUtB,EAA3C,UACI,wBAAQI,MAAM,GAAd,8BACC,YAAKmB,MAAM,IAAIC,QAASC,KAAI,SAACC,GAAD,OACzB,wBAAQtB,OAAQ,IAAIM,MAAQC,cAAgBe,EAA5C,UAAiD,IAAIhB,MAAQC,cAAgBe,aAKzF,eAAChD,EAAD,WACI,cAACE,EAAD,mBACA,cAACI,EAAD,CACI2C,KAAK,QACLxB,KAAK,OACLC,MAAM,SACNwB,QAAkB,WAATjC,EACT2B,SAAUtB,IAPlB,YASI,cAAChB,EAAD,CACI2C,KAAK,QACLxB,KAAK,OACLC,MAAM,WACNwB,QAAkB,aAATjC,EACT2B,SAAUtB,IAdlB,cAkBA,cAACd,EAAD,CAAOyC,KAAK,SAAZ,wBAIZtC,EAAWpB,SAAW,CAClBqB,eAAgBpB,IAAS2D,KAAKzD,WAC9BmB,gBAAiBrB,IAAS2D,KAAKzD,YAEpBiB,I,EAAAA,ICvJTyC,EAAoBnE,IAAOgB,IAAV,kJAOvB,SAASoD,EAAT,GAA2B,IAATnC,EAAQ,EAARA,MACPH,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,KAAMC,EAAQC,EAARD,KACpB,MAAc,KAAVF,GAAyB,KAATC,GAAyB,KAAVC,EACxB,KAGP,eAACmC,EAAD,WACI,0DAGA,+BACI,yCAAYzD,EAAgBoB,MAC5B,wCAAWpB,EAAgBqB,MAC3B,wCAAWrB,EAAgBsB,YAK3CoC,EAAQ9D,SAAW,CACf2B,MAAO1B,IAAS8D,OAAO5D,YAEZ2D,I,MAAAA,I,gBC5BTE,EAAUtE,IAAOuE,EAAV,2IAMPC,EAAkBxE,IAAOuE,EAAV,4IAOfE,EAAsBzE,IAAOgB,IAAV,qMASzB,SAAS0D,EAAT,GAAkC,IAAdjB,EAAa,EAAbA,WAEhB,OACoB,IAAfA,EACK,cAACa,EAAD,mDAGM,cAACG,EAAD,UACI,cAACE,EAAA,EAAD,CACIC,UAAU,OACVC,UAAU,YAFd,SAII,cAACC,EAAA,EAAD,CACIC,WAAW,YAEXC,QAAS,CAACC,MAAM,IAAKC,KAAK,KAH9B,SAII,eAACV,EAAD,6BAAgC,+BAAOf,QAFlCA,OASrCiB,EAAUpE,SAAW,CACjBmD,WAAYlD,IAAS4E,OAAO1E,YAEjBiE,Q,MC1CAU,I,IAAAA,EATf,WACI,OACI,sBAAKP,UAAU,UAAf,UACI,qBAAKA,UAAU,SACf,qBAAKA,UAAU,aCGrBQ,GAAarF,IAAOgB,IAAV,oEAKVsE,GAAuBtF,IAAOgB,IAAV,yEA8BXuE,OA1Bf,WAAgB,IAAD,EAEqB1D,mBAAS,CACzC4B,WAAY,EACZxB,MAAO,CACLH,MAAO,GACPC,KAAM,GACNC,KAAM,MAPG,mBAENwD,EAFM,KAEG7D,EAFH,OAUuBE,oBAAS,GAVhC,mBAUN4D,EAVM,KAUI7D,EAVJ,KAYN6B,EAAqB+B,EAArB/B,WAAYxB,EAASuD,EAATvD,MACnB,OACE,eAACoD,GAAD,WACE,cAAC,EAAD,CAAQhF,OAAO,yBACf,eAACiF,GAAD,WACE,cAAC,EAAD,CAAY3D,eAAgBA,EAAgBC,gBAAiBA,IAC5D6D,EAAW,cAAC,EAAD,IAAa,KACzB,cAAC,EAAD,CAASxD,MAAOA,IACdwD,EAAkD,KAAvC,cAAC,EAAD,CAAWhC,WAAYA,WC1B7BiC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.cb5fec24.chunk.js","sourcesContent":["import React from 'react'\nimport PropType from 'prop-types';\n\n/*\n    instalar librerias: npm i @emotion/styled @emotion/react\n    instalar extensiones en vs code: \n        - vscode-styled-components\n        - styled-components-snippets\n        - Styled-Snippets\n*/ \nimport styled from '@emotion/styled';\nconst Contenedorheader = styled.header`\n    background-color: #26c6da;\n    padding: 10px;\n    font-weight: bold;\n    color: #fff; \n`;\n\nconst TextoHeader = styled.h1`\n    font-size: 2rem;\n    margin: 0;\n    font-family: 'Slavo 27px', serif;\n    text-align: center;\n`;\nfunction Header({titulo}) {\n    return (\n        <Contenedorheader>\n            <TextoHeader>{titulo}</TextoHeader>\n        </Contenedorheader>\n    )\n}\nHeader.propType = {\n    titulo: PropType.string.isRequired\n}\nexport default Header\n","//Obtiene la diferencia de a침os\nexport function obtenerDiferenciaYear(year){\n    return new Date().getFullYear() - year;\n}\n\n// Calcula el total a pagar segun la marca\nexport function calcularMarca(marca){\n    let incremento;\n    switch (marca) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            \n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            \n            break;\n    \n        default:\n            break;\n    }\n    return incremento;\n}\n\n//Calcula el tipo de seguro\nexport function obtenerPlan(plan){\n    return (plan === 'basico') ? 1.20 : 1.50;\n}\n\n// Muestra la primer letra mayuscula\nexport function primerMayuscula(texto){\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, {useState} from 'react'\nimport styled from '@emotion/styled';\nimport PropType from 'prop-types';\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helpers';\nconst Campo = styled.div`\n    display: flex;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    padding: 1rem;\n    border: 1px solid #e1e1e1;\n    -webkit-appearance: none;\n`;\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n`;\nconst Boton = styled.button`\n    background-color: #00838f;;\n    font-size: 16px;\n    width: 100%;\n    padding:1rem;\n    color: #fff;\n    text-transform: uppercase;\n    font-weight: bold;\n    border: none;\n    transition: background-color .3s ease;\n    margin-top: 2rem;\n    &:hover{\n        cursor: pointer;\n        background-color: #26c6da;\n    }\n`;\nconst Error = styled.div`\n    background-color: red;\n    color: white;\n    padding: 1rem;\n    width: 100%;\n    text-align: center ;\n    margin-bottom: 2rem;\n`;\nfunction Formulario({guardarResumen, guardarCargando}) {\n\n    const [datos, guardarDatos] = useState({\n        marca:'',\n        year:'',\n        plan:'',\n    });\n    \n    const [error, guardarError] = useState(false);\n    //extraer los valores del state\n    const {marca, year, plan} = datos;\n\n    //Leer los datos del formulario y colocarlos en el state\n    const obtenerInformacion = e => {\n        guardarDatos({\n            ...datos,\n            [e.target.name] : e.target.value\n        });\n    }\n\n    //Cuando el usuario presiona submit\n    const cotizarSeguro = e => {\n        e.preventDefault();\n        if (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n\n        //una base de 2000\n\n        let resultado = 2000\n        //Obtener la diferencia de a침os\n        const diferencia = obtenerDiferenciaYear(year);\n        \n        //Por cada a침o hay que restar el 3%\n        resultado -= ((diferencia * 3) * resultado) / 100;\n        \n        //Americano 15%\n        //Asiatico 5%\n        //Europeo 30%\n        resultado = calcularMarca(marca) * resultado;\n        \n        //Basico aumenta 20%\n        //Completo 50%\n        const incrementoPlan = obtenerPlan(plan);\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n        guardarCargando(true);\n        //Total\n        setTimeout(() => {\n            //Elimina el spinner\n            guardarCargando(false);\n\n            //pasa la informaci칩n al componente principal\n            guardarResumen({\n                cotizacion: Number(resultado),\n                datos\n            })\n        }, 3000);\n    }\n    return (\n        <form\n            onSubmit={cotizarSeguro}\n        >\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\n            <Campo>\n                <Label>Marca</Label>\n                <Select name=\"marca\" value={marca} onChange={obtenerInformacion}>\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asiatico</option>\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>A침o</Label>\n                <Select name=\"year\" value={year} onChange={obtenerInformacion}>\n                    <option value=\"\">-- Seleccione --</option>\n                    {[...(Array(10).keys())].map((i) => (\n                        <option value={(new Date()).getFullYear() - i}>{(new Date()).getFullYear() - i}</option>\n\n                    ))}\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio \n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === \"basico\"}\n                    onChange={obtenerInformacion}\n                />B치sico\n                <InputRadio \n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === \"completo\"}\n                    onChange={obtenerInformacion}\n                />Completo\n            </Campo>\n\n            <Boton type=\"submit\">Cotizar</Boton>\n        </form>\n    )\n}\nFormulario.propType = {\n    guardarResumen: PropType.func.isRequired,\n    guardarCargando: PropType.func.isRequired\n}\nexport default Formulario\n","import React from 'react'\nimport styled from '@emotion/styled';\nimport PropType from 'prop-types';\n\nimport { primerMayuscula } from '../helpers';\nconst Contenedorresumen = styled.div`\n    padding: 1rem;\n    text-align: center;\n    background-color: #00838f;\n    color: #fff;\n    margin-top: 1rem;\n`;\nfunction Resumen({datos}) {\n    const {marca, year, plan} = datos;\n    if (marca === '' || year === '' || plan  === '') {\n        return null;   \n    }\n    return (\n        <Contenedorresumen>\n            <h2>\n                Resumen de cotizaci칩n\n            </h2>\n            <ul>\n                <li>Marca: {primerMayuscula(marca)}</li>\n                <li>Year: {primerMayuscula(year)}</li>\n                <li>Plan: {primerMayuscula(plan)}</li>\n            </ul>\n        </Contenedorresumen>\n    )\n}\nResumen.propType = {\n    datos: PropType.object.isRequired\n}\nexport default Resumen\n","import React from 'react'\nimport styled from '@emotion/styled';\nimport PropType from 'prop-types';\n\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nconst Mensaje = styled.p`\n    background-color: rgb(127, 224, 237);\n    margin-top: 2rem;\n    padding: 1rem;\n    text-align: center;\n`;\nconst TextoCotizacion = styled.p`\n    color: #00838f;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin:0;\n`;\nconst ResultadoCotizacion = styled.div`\n    text-align: center;\n    padding: 0.5rem;\n    border: 1px solid #26c6da;\n    background-color: rgb(127,224,237);;\n    margin-top: 1rem;\n    position: relative;\n`;\n\nfunction Resultado({cotizacion}) {\n    \n    return (\n        (cotizacion === 0) \n            ? <Mensaje>Elige marca, a침o y tipo de seguro</Mensaje> \n            : \n                (\n                    <ResultadoCotizacion>\n                        <TransitionGroup\n                            component=\"span\"\n                            className=\"resultado\">\n\n                            <CSSTransition\n                                classNames=\"resultado\"\n                                key={cotizacion}\n                                timeout={{enter:500, exit:500}}>\n                                <TextoCotizacion>El total es: $ <span>{cotizacion}</span></TextoCotizacion>\n                            </CSSTransition>\n                        </TransitionGroup>\n                    </ResultadoCotizacion>\n                )\n    );\n}\nResultado.propType = {\n    cotizacion: PropType.number.isRequired\n}\nexport default Resultado\n","import React from 'react'\nimport './Spinner.css'\nfunction Spinner() {\n    return (\n        <div className=\"spinner\">\n            <div className=\"dot1\"></div>\n            <div className=\"dot2\"></div>\n        </div>\n    )\n}\n\nexport default Spinner\n","\nimport React, {useState} from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport styled from '@emotion/styled';\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\nfunction App() {\n\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: '',\n    }\n  });\n  const [cargando, guardarCargando] = useState(false);\n  //extraer datos\n  const {cotizacion, datos} = resumen;\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de seguros\"/>\n      <ContenedorFormulario>\n        <Formulario guardarResumen={guardarResumen} guardarCargando={guardarCargando}/>\n        {cargando ? <Spinner/> : null}\n        <Resumen datos={datos}/>\n        {!cargando ? <Resultado cotizacion={cotizacion}/> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}